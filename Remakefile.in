all: src/gappa

clean: src/clean doc/clean testsuite/clean

check: testsuite/check-null testsuite/check-coq testsuite/check-holl

%.o: %.cpp config.h
	if [ $1 = src/parser/parser.o -o $1 = src/parser/lexer.o ]; then
		remake src/parser/parser.hpp
	fi
	if [ $1 = src/parameters.o -o $1 = src/parser/ring.o ]; then
		remake config.h
	fi
	@CXX@ @CPPFLAGS@ @CXXFLAGS@ -MMD -MT dummy -MF $1.d -I src -c -o $1 ${1%.o}.cpp
	read DEPS < $1.d
	remake ${DEPS#*:}
	rm $1.d

src/parser/parser.cpp src/parser/parser.hpp: src/parser/parser.ypp
	@YACC@ -d -o src/parser/parser.cpp src/parser/parser.ypp

src/parser/lexer.cpp: src/parser/lexer.lpp
	@LEX@ -o src/parser/lexer.cpp src/parser/lexer.lpp

Remakefile: Remakefile.in config.status
	./config.status Remakefile

config.h: config.h.in config.status
	./config.status config.h
	touch config.h

config.status: configure.in
	autoreconf -s -i
	./config.status --recheck

OBJS = \
	src/arithmetic/fixed.o \
	src/arithmetic/float.o \
	src/arithmetic/homogen.o \
	src/arithmetic/relative.o \
	src/backends/backend.o \
	src/backends/coq.o \
	src/backends/coq_common.o \
	src/backends/coq_lambda.o \
	src/backends/holl.o \
	src/numbers/interval.o \
	src/numbers/io.o \
	src/numbers/real.o \
	src/numbers/round.o \
	src/parser/ast.o \
	src/parser/lexer.o \
	src/parser/parser_aux.o \
	src/parser/parser.o \
	src/parser/pattern.o \
	src/parser/ring.o \
	src/proofs/basic_proof.o \
	src/proofs/dichotomy.o \
	src/proofs/proof_graph.o \
	src/proofs/property.o \
	src/proofs/rewriting.o \
	src/proofs/schemes.o \
	src/proofs/updater.o \
	src/main.o \
	src/parameters.o

src/gappa: $(OBJS)
	@CXX@ @CXXFLAGS@ -o src/gappa $OBJS -lmpfr -lgmp

src/clean:
	rm -f $OBJS
	cd src
	rm -f gappa parser/parser.h parser/parser.cpp parser/lexer.cpp

doc/gappa-news.xml: NEWS
	cd doc ; ./changelog.pl > ./gappa-news.xml

doc/gappa-preprocessed.xml: doc/gappa-news.xml
	cd doc
	@XSLTPROC@ --load-trace -o gappa-preprocessed.xml gappa-preprocess.xsl gappa.xml 2> xml.deps
	cd ..
	remake $(sed -n -e "\\,//,! s,^.*URL=\"\\([^\"]*\\).*\$,doc/\\1,p" doc/xml.deps)
	rm doc/xml.deps

doc/html/index.html: doc/gappa-preprocessed.xml doc/gappa-html.xsl
	cd doc
	rm -rf tmp/ html/
	mkdir html
	@XSLTPROC@ gappa-html.xsl gappa-preprocessed.xml
	cp -r gappa.css images html/
	mkdir tmp
	mv tex-math-equations.tex tmp/
	sed -i -e "s/dvi2bitmap outputfile/dvi2bitmap mark outputfile/" -e "2i\\\\\\usepackage\\{amsfonts\\}" tmp/tex-math-equations.tex
	cd tmp
	latex tex-math-equations.tex
	@DVI2BITMAP@ --magnification=4 --scaledown=4 --verbose=quiet --query=bitmaps tex-math-equations.dvi | \
	awk "\$6 > -10 {printf \"s/img src=\\\"%s\\\"/img style=\\\"margin-bottom: %dpx\\\" src=\\\"%s\\\"/g\\n\", \$2, (\$6 - \$4 + 14.25), \$2}" > margin.sed
	cd ..
	find html -name "*.html" -exec sed -i -f tmp/margin.sed "{}" ";"
	find tmp -name "*.png" | xargs mv -t html/
	rm -rf tmp/

doc/gappa.pdf: doc/gappa-preprocessed.xml doc/gappa-pdf.xsl doc/gappa.sty
	cd doc
	@DBLATEX@ -p gappa-pdf.xsl -s gappa.sty -o gappa.pdf gappa-preprocessed.xml

doc/clean:
	cd doc
	rm -rf gappa-preprocessed.xml gappa-news.xml gappa.pdf html/

testsuite/check-%: src/gappa
	set +e
	BACKEND=${1#*-}
	cd testsuite
	logfile="failures-$BACKEND-$(date '+%Y-%m-%d').log"
	logtmp="log-$BACKEND.tmp"
	outputtmp="output-$BACKEND.tmp"
	cat /dev/null > "$logtmp"
	cat /dev/null > "$logfile"
	for f in *.g; do
	  execute=0
	  if grep -e '^# back-end:' "$f" > /dev/null; then
	    grep -e '^# back-end:.*'$BACKEND "$f" > /dev/null
	    execute=$?
	  fi
	  if [ $execute -eq 0 ]; then
	    timeout 5 ../src/gappa -B$BACKEND "$f" > /dev/null 2> "$outputtmp"
	    return_code=$?
	    if [ ${return_code} -ne 0 ]; then
	      (echo "*** $f exited with error code ${return_code}"; cat "$outputtmp"; echo) >> "$logfile"
	      echo "$f exited with error code ${return_code}" >> "$logtmp"
	    fi
	    rm "$outputtmp"
	  fi
	done
	return_code=0
	if [ -s $logtmp ]; then
	  echo "*** Failures for $BACKEND backend:"
	  cat "$logtmp"
	  return_code=1
	else
	  rm "$logfile"
	fi
	rm "$logtmp"
	exit ${return_code}

testsuite/clean:
	rm -f testsuite/failures-*.log
