<para>Comments begin with a sharp sign <code>#</code> and go till the end of
the line. Space, tabulation, and line-break characters are not significant.</para>

<section>
<title>Tokens</title>

<para>There are two composite operators <code>/\</code> (<code>AND</code>) and
<code>-&gt;</code> (<code>IMPL</code>), and one keyword <code>in</code>
(<code>IN</code>).</para>

<para>Numbers are either written with a binary representation, or with a
decimal representation. In both representations, the <code>{integer}</code>
parts are radix-10 natural numbers.</para>
<programlisting><![CDATA[{binary}   {integer}([bB][-+]?{integer})?
{decimal}  (({integer}(\.{integer}?)?)|(\.{integer}))([eE][-+]?{integer})?]]>
</programlisting>

<para>Identifiers (<code>IDENT</code>) are described by
<code>{alpha}({alpha}|{digit}|_)*</code>.</para>

</section>

<section>
<title>Grammar</title>

<programlisting><![CDATA[
$accept: BLOB $end

BLOB: PROG '{' PROP '}' REWRITE

PROP: ATOM
    | '(' PROP ')'
    | PROP AND PROP
    | PROP IMPL PROP

SNUMBER: NUMBER
       | '+' NUMBER
       | '-' NUMBER

INTERVAL: '[' SNUMBER ',' SNUMBER ']'
        | '?'

ATOM: REAL IN INTERVAL

ROUNDING: '<' IDENT '>'

EQUAL: '='
     | ROUNDING '='

PROG: /* empty */
    | PROG IDENT EQUAL REAL ';'

REAL: NUMBER
    | IDENT
    | IDENT '(' OPERANDS ')'
    | ROUNDING '(' REAL ')'
    | REAL '+' REAL
    | REAL '-' REAL
    | REAL '*' REAL
    | REAL '/' REAL
    | '(' REAL ')'
    | '+' REAL
    | '-' REAL

OPERANDS: REAL
        | OPERANDS ',' REAL

REWRITE: /* empty */
       | REWRITE REAL IMPL REAL ';'
       | REWRITE REAL '$' REAL ';']]>
</programlisting>
</section>
